#!/usr/bin/env python
import argparse
import sys
import subprocess
import os.path


parser = argparse.ArgumentParser(description='Unified interface for running JavaScript programs on the command line.')
parser.add_argument('file', type=str, 
                   help='the path to the JavaScript file to execute')
parser.add_argument('arguments', metavar='A', nargs='*', type=str,
				   help='positional arguments to pass to the function (ignored if the file is a script)')

args = parser.parse_args()

def bash_to_javascript(a):
	try:
		return str(int(a))
	except ValueError:
		pass

	try:
		return str(float(a))
	except ValueError:
		pass

	return "'" + a + "'"

arguments = ",".join(map(bash_to_javascript, args.arguments))

node_runner_script = """var fs = require('fs'); eval(fs.readFileSync('%s').toString()); if (typeof run !== 'undefined') { run(%s) } else if (typeof runner !== 'undefined') { runner(%s) } """%(args.file, arguments, arguments)

try:
	subprocess.check_call(
		['node',
            '-e',
            node_runner_script,
		], stdout=sys.stdout, stderr=sys.stderr)
	sys.exit(0)
except subprocess.CalledProcessError as e:
	sys.exit(e.returncode)











